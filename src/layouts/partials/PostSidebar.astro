---
import { humanize } from "@/lib/utils/textConverter";

const { tags, categories, allCategories } = Astro.props;
---

<div class="lg:col-4">
  <!-- categories -->
  <div
    class="p-8
    relative rounded-3xl overflow-hidden
    shadow-lg shadow-border dark:shadow-darkmode-border
    bg-body dark:bg-darkmode-body
    text-primary dark:text-darkmode-primary
    border border-border dark:border-darkmode-border"
  >
    <div class="mb-8">
      <a
        class="h5 mb-6 hover:text-primary dark:hover:text-darkmode-primary"
        href={`/categories`}>Categories</a
      >
      <div
        class="p-4 md:col-span-1 border-t pl-2 md:pl-6
        border-border dark:border-darkmode-border"
      >
        <ul class="space-y-4">
          {
            categories.map((category: any) => {
              const count = allCategories.filter(
                (c: any) => c === category,
              ).length;
              return (
                <li>
                  <a
                    class="flex justify-between hover:text-gray-500 transition-colors"
                    href={`/categories/${category}`}
                  >
                    {humanize(category)} <span>({count})</span>
                  </a>
                </li>
              );
            })
          }
        </ul>
      </div>
    </div>
    <!-- tags -->
    <div class="mb-8">
      <a class="h5 mb-6" href={`/tags`}>Tags</a>
      <div
        class="p-4 md:col-span-1 border-t pl-2 md:pl-6
      border-border dark:border-darkmode-border"
      >
        <ul>
          {
            tags.map((tag: any) => {
              return (
                <li class="inline-block">
                  <a
                    class="btn btn-outline-primary m-1 px-3 py-1"
                    href={`/tags/${tag}`}
                  >
                    {humanize(tag)}
                  </a>
                </li>
              );
            })
          }
        </ul>
      </div>
    </div>
  </div>
</div>
