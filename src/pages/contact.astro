---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import PageHeader from "@/partials/PageHeader.astro";
import { getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Notice from "@/shortcodes/Notice";

const contact = (await getEntry(
  "contact",
  "-index",
)) as CollectionEntry<"contact">;
const { title, description, meta_title, image } = contact.data;
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
  image={image}
>
  <PageHeader title={title} />
  <section class="section-sm">
    <div class="container">
      <div class="row">
        <div class="mx-auto md:col-10 lg:col-6">
          <!-- Add success message container -->
          <div id="successMessage" class="hidden mt-6">
            <Notice type="success" color="text-primary text-darkmode-primary">
              <span id="successMessageText"></span>
            </Notice>
          </div>
          <form
            id="contactForm"
            method="POST"
            data-contact-url={config.params.contact_form_url}
          >
            <div class="mb-6">
              <label for="name" class="form-label">
                Full Name <span class="text-red-500">*</span>
              </label>
              <input
                id="name"
                name="name"
                class="form-input"
                placeholder="Budi Susanti"
                type="text"
              />
            </div>
            <div class="mb-6">
              <label for="email" class="form-label">
                Working e-Mail <span class="text-red-500">*</span>
              </label>
              <input
                id="email"
                name="email"
                class="form-input"
                placeholder="budi.susanti@email.com"
                type="email"
              />
            </div>
            <div class="mb-6">
              <label for="message" class="form-label">
                Message <span class="text-red-500">*</span>
              </label>
              <textarea
                id="message"
                name="message"
                class="form-input"
                placeholder="Message goes here..."
                rows="8"></textarea>
            </div>
            <button id="submitBtn" type="submit" class="btn btn-primary"
              >Submit</button
            >
          </form>
        </div>
      </div>
    </div>
  </section>
  <script is:inline>
    document
      .getElementById("contactForm")
      .addEventListener("submit", async (e) => {
        e.preventDefault();

        const form = e.target;
        const submitBtn = document.getElementById("submitBtn");
        const successMessage = document.getElementById("successMessage");
        const url = e.target.dataset.contactUrl;

        console.log("Submitting to:", url);
        console.log("Form data:", {
          name: form.name.value,
          email: form.email.value,
          message: form.message.value,
        });

        try {
          // Basic validation
          const name = form.name.value.trim();
          const email = form.email.value.trim();
          const message = form.message.value.trim();

          if (!name || !email || !message) {
            throw new Error("All fields are required");
          }

          // Add loading state
          submitBtn.disabled = true;
          submitBtn.textContent = "Submitting...";
          submitBtn.classList.remove("btn-primary");

          // Send form data
          const response = await fetch(url, {
            method: "POST",
            body: new URLSearchParams({
              name: name,
              email: email,
              message: message,
            }),
            headers: {
              "Content-Type": "application/x-www-form-urlencoded",
            },
          });

          const result = await response.json();

          if (result.status === "success") {
            // Update success message with personalized text
            const successText = document.getElementById("successMessageText");

            successText.innerHTML = `
              Thank you, <strong>${name}</strong>! ðŸŒŸ
              <div class="mt-4 p-3 border rounded-lg">
                <div>Your message:</div>
                <div>${message.substring(0, 50)}...</div>
              </div>
              <div class="mt-4">I'll respond to <strong>${form.email.value.trim()}</strong> within 24 hours.</div>
            `;

            // Show and animate the success message
            successMessage.classList.remove("hidden");
            successMessage.style.opacity = 0;
            successMessage.style.transform = "translateY(10px)";

            // Animate entrance
            setTimeout(() => {
              successMessage.style.transition = "all 0.3s ease";
              successMessage.style.opacity = 1;
              successMessage.style.transform = "translateY(0)";
            }, 50);

            // Show success message and reset form
            successMessage.classList.remove("hidden");
            form.reset();
            setTimeout(() => {
              successMessage.classList.add("hidden");
            }, 50000);
          } else {
            throw new Error(result.message || "Submission failed");
          }

          // Inside response handling:
          console.log("Response:", result);
        } catch (error) {
          alert(error.message);
        } finally {
          // Reset button state
          submitBtn.disabled = false;
          submitBtn.textContent = "Submit";
          submitBtn.classList.add("btn-primary");
        }
      });
  </script>
</Base>
